# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Backend CD to Staging Server

on:
  push:
    branches: [ staging ]

jobs:
  migrate-db:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Upload SQL File
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: sweng894-gp4-cap
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: cp ./database/scripts/setup.sql gs://db-sql-staging/
        cli: gsutil

    - name: Delete Database
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: sweng894-gp4-cap
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: sql databases delete groupthinq --instance=groupthinq-db-staging
        cli: gcloud

    - name: Add Database
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: sweng894-gp4-cap
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: sql databases create groupthinq --instance=groupthinq-db-staging
        cli: gcloud

    - name: Import SQL
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: sweng894-gp4-cap
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: sql import sql groupthinq-db-staging gs://db-sql-staging/setup.sql --database=groupthinq
        cli: gscloud

  build-backend:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Grant execute permission for gradlew
      working-directory: ./backend
      run: chmod +x gradlew
      
    - name: Build with Gradle
      working-directory: ./backend
      run: ./gradlew build

    - name: Docker Build
      run: docker build --tag gcr.io/sweng894-gp4-cap/backend-staging ./backend

    - name: Generate local key for Google Cloud
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: sweng894-gp4-cap
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: iam service-accounts keys create keyfile.json --iam-account github-actions@sweng894-gp4-cap.iam.gserviceaccount.com
        cli: gcloud

    - name: Activate service account with key
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: sweng894-gp4-cap
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: auth activate-service-account github-actions@sweng894-gp4-cap.iam.gserviceaccount.com --key-file=keyfile.json
        cli: gcloud

    - name: Login to Google Cloud Registry
      uses: actions-hub/gcloud@master
      env:
        PROJECT_ID: sweng894-gp4-cap
        APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      with:
        args: auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://gcr.io
        cli: gcloud

    - name: Docker Build
      run: docker push gcr.io/sweng894-gp4-cap/backend-staging
      