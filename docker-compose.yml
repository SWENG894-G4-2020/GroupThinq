version: '3.6'
services:
  db:
    image: postgres:alpine
    container_name: postgres_dev
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - 5433:5432
    volumes:
        - ./database/scripts:/docker-entrypoint-initdb.d
        - /var/lib/postgresql/data
    networks:
      - backdb
    expose: 
      - 5433
  
  backend:
    image: gradle
    container_name: backend_dev
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_CONN=${DB_CONN}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXP=${JWT_EXP}
      - JWT_ROLE=${JWT_ROLE}
    ports:
      - 8080:8080
    working_dir: /backend
    volumes:
      - ./backend:/backend
    command: gradle clean build bootRun
    depends_on:
      - db
    links:
      - db:database
    networks:
      - frontback 
      - backdb

  frontend:
    build:
      context: ./frontend
      dockerfile: DOCKERFILE
    container_name: frontend_dev
    environment: 
      - BACKEND_URL=${BACKEND_URL}
    ports:
      - 8081:8081
    volumes: 
      - ./frontend/groupthinq_frontend:/frontend
      - /frontend/node_modules
    depends_on:
      - backend
    networks: 
      - frontback     
  
networks: 
  backdb:
    driver: bridge
  frontback:
    driver: bridge